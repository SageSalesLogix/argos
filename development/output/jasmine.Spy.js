Ext.data.JsonP.jasmine_Spy({"tagname":"class","name":"jasmine.Spy","autodetected":{},"files":[{"filename":"jasmine.js","href":"jasmine.html#jasmine-Spy"}],"members":[{"name":"argsForCall","tagname":"property","owner":"jasmine.Spy","id":"property-argsForCall","meta":{}},{"name":"identity","tagname":"property","owner":"jasmine.Spy","id":"property-identity","meta":{}},{"name":"isSpy","tagname":"property","owner":"jasmine.Spy","id":"property-isSpy","meta":{}},{"name":"mostRecentCall","tagname":"property","owner":"jasmine.Spy","id":"property-mostRecentCall","meta":{}},{"name":"util","tagname":"property","owner":"jasmine.Spy","id":"property-util","meta":{}},{"name":"constructor","tagname":"method","owner":"jasmine.Spy","id":"method-constructor","meta":{}},{"name":"afterEach","tagname":"method","owner":"jasmine.Spy","id":"method-afterEach","meta":{}},{"name":"andCallFake","tagname":"method","owner":"jasmine.Spy","id":"method-andCallFake","meta":{"chainable":true}},{"name":"andCallThrough","tagname":"method","owner":"jasmine.Spy","id":"method-andCallThrough","meta":{"chainable":true}},{"name":"andReturn","tagname":"method","owner":"jasmine.Spy","id":"method-andReturn","meta":{"chainable":true}},{"name":"andThrow","tagname":"method","owner":"jasmine.Spy","id":"method-andThrow","meta":{"chainable":true}},{"name":"beforeEach","tagname":"method","owner":"jasmine.Spy","id":"method-beforeEach","meta":{}},{"name":"createSpyObj","tagname":"method","owner":"jasmine.Spy","id":"method-createSpyObj","meta":{}},{"name":"describe","tagname":"method","owner":"jasmine.Spy","id":"method-describe","meta":{}},{"name":"expect","tagname":"method","owner":"jasmine.Spy","id":"method-expect","meta":{}},{"name":"inherit","tagname":"method","owner":"jasmine.Spy","id":"method-inherit","meta":{"private":true}},{"name":"isSpy","tagname":"method","owner":"jasmine.Spy","id":"method-isSpy","meta":{}},{"name":"it","tagname":"method","owner":"jasmine.Spy","id":"method-it","meta":{}},{"name":"log","tagname":"method","owner":"jasmine.Spy","id":"method-log","meta":{}},{"name":"plan","tagname":"method","owner":"jasmine.Spy","id":"method-plan","meta":{}},{"name":"reset","tagname":"method","owner":"jasmine.Spy","id":"method-reset","meta":{}},{"name":"runs","tagname":"method","owner":"jasmine.Spy","id":"method-runs","meta":{}},{"name":"spyOn","tagname":"method","owner":"jasmine.Spy","id":"method-spyOn","meta":{}},{"name":"subclass","tagname":"method","owner":"jasmine.Spy","id":"method-subclass","meta":{"private":true}},{"name":"waits","tagname":"method","owner":"jasmine.Spy","id":"method-waits","meta":{"deprecated":{"text":"<p>Use waitsFor() instead</p>\n"}}},{"name":"waitsFor","tagname":"method","owner":"jasmine.Spy","id":"method-waitsFor","meta":{}},{"name":"xdescribe","tagname":"method","owner":"jasmine.Spy","id":"method-xdescribe","meta":{}},{"name":"xit","tagname":"method","owner":"jasmine.Spy","id":"method-xit","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-jasmine.Spy","short_doc":"Jasmine Spies are test doubles that can act as stubs, spies, fakes or when used in an expecation, mocks. ...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/jasmine.html#jasmine-Spy' target='_blank'>jasmine.js</a></div></pre><div class='doc-contents'><p>Jasmine Spies are test doubles that can act as stubs, spies, fakes or when used in an expecation, mocks.</p>\n\n<p>Spies should be created in test setup, before expectations.  They can then be checked, using the standard Jasmine\nexpectation syntax. Spies can be checked if they were called or not and what the calling params were.</p>\n\n<p>A Spy has the following fields: wasCalled, callCount, mostRecentCall, and argsForCall (see docs).</p>\n\n<p>Spies are torn down at the end of every spec.</p>\n\n<p>Note: Do <b>not</b> call new <a href=\"#!/api/jasmine.Spy\" rel=\"jasmine.Spy\" class=\"docClass\">jasmine.Spy</a>() directly - a spy must be created using spyOn, jasmine.createSpy or jasmine.createSpyObj.</p>\n\n<p>@example\n// a stub\nvar myStub = jasmine.createSpy('myStub');  // can be used anywhere</p>\n\n<p>// spy example\nvar foo = {\n  not: function(bool) { return !bool; }\n}</p>\n\n<p>// actual foo.not will not be called, execution stops\nspyOn(foo, 'not');</p>\n\n<p> // foo.not spied upon, execution will continue to implementation\nspyOn(foo, 'not').andCallThrough();</p>\n\n<p>// fake example\nvar foo = {\n  not: function(bool) { return !bool; }\n}</p>\n\n<p>// foo.not(val) will return val\nspyOn(foo, 'not').andCallFake(function(value) {return value;});</p>\n\n<p>// mock example\nfoo.not(7 == 7);\nexpect(foo.not).toHaveBeenCalled();\nexpect(foo.not).toHaveBeenCalledWith(true);</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-argsForCall' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jasmine.Spy'>jasmine.Spy</span><br/><a href='source/jasmine.html#jasmine-Spy-property-argsForCall' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jasmine.Spy-property-argsForCall' class='name expandable'>argsForCall</a> : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>Holds arguments for each call to the spy, indexed by call count\n@example\nvar mySpy = jasmine.createSpy('foo');\nmySpy(...</div><div class='long'><p>Holds arguments for each call to the spy, indexed by call count\n@example\nvar mySpy = jasmine.createSpy('foo');\nmySpy(1, 2);\nmySpy(7, 8);\nmySpy.mostRecentCall.args = [7, 8];\nmySpy.argsForCall[0] = [1, 2];\nmySpy.argsForCall[1] = [7, 8];</p>\n<p>Defaults to: <code>[]</code></p></div></div></div><div id='property-identity' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jasmine.Spy'>jasmine.Spy</span><br/><a href='source/jasmine.html#jasmine-Spy-property-identity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jasmine.Spy-property-identity' class='name expandable'>identity</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'><p>The name of the spy, if provided.</p>\n</div><div class='long'><p>The name of the spy, if provided.</p>\n</div></div></div><div id='property-isSpy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jasmine.Spy'>jasmine.Spy</span><br/><a href='source/jasmine.html#jasmine-Spy-property-isSpy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jasmine.Spy-property-isSpy' class='name expandable'>isSpy</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Is this Object a spy? ...</div><div class='long'><p>Is this Object a spy?</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='property-mostRecentCall' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jasmine.Spy'>jasmine.Spy</span><br/><a href='source/jasmine.html#jasmine-Spy-property-mostRecentCall' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jasmine.Spy-property-mostRecentCall' class='name expandable'>mostRecentCall</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Tracking of the most recent call to the spy. ...</div><div class='long'><p>Tracking of the most recent call to the spy.\n@example\nvar mySpy = jasmine.createSpy('foo');\nmySpy(1, 2);\nmySpy.mostRecentCall.args = [1, 2];</p>\n<p>Defaults to: <code>{}</code></p></div></div></div><div id='property-util' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jasmine.Spy'>jasmine.Spy</span><br/><a href='source/jasmine.html#jasmine-Spy-property-util' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jasmine.Spy-property-util' class='name expandable'>util</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>@namespace ...</div><div class='long'><p>@namespace</p>\n<p>Defaults to: <code>{}</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jasmine.Spy'>jasmine.Spy</span><br/><a href='source/jasmine.html#jasmine-Spy-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/jasmine.Spy-method-constructor' class='name expandable'>jasmine.Spy</a>( <span class='pre'>name</span> ) : <a href=\"#!/api/jasmine.Spy\" rel=\"jasmine.Spy\" class=\"docClass\">jasmine.Spy</a><span class=\"signature\"></span></div><div class='description'><div class='short'>@see spyOn, jasmine.createSpy, jasmine.createSpyObj ...</div><div class='long'><p>@see spyOn, jasmine.createSpy, jasmine.createSpyObj</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/jasmine.Spy\" rel=\"jasmine.Spy\" class=\"docClass\">jasmine.Spy</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-afterEach' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jasmine.Spy'>jasmine.Spy</span><br/><a href='source/jasmine.html#jasmine-Spy-method-afterEach' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jasmine.Spy-method-afterEach' class='name expandable'>afterEach</a>( <span class='pre'>afterEachFunction</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>A function that is called after each spec in a suite. ...</div><div class='long'><p>A function that is called after each spec in a suite.</p>\n\n<p>Used for restoring any state that is hijacked during spec execution.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>afterEachFunction</span> : Function<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-andCallFake' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jasmine.Spy'>jasmine.Spy</span><br/><a href='source/jasmine.html#jasmine-Spy-method-andCallFake' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jasmine.Spy-method-andCallFake' class='name expandable'>andCallFake</a>( <span class='pre'>fakeFunc</span> ) : <a href=\"#!/api/jasmine.Spy\" rel=\"jasmine.Spy\" class=\"docClass\">jasmine.Spy</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Calls an alternate implementation when a spy is called. ...</div><div class='long'><p>Calls an alternate implementation when a spy is called.</p>\n\n<p>@example\nvar baz = function() {\n  // do some stuff, return something\n}\n// defining a spy from scratch: foo() calls the function baz\nvar foo = jasmine.createSpy('spy on foo').andCall(baz);</p>\n\n<p>// defining a spy on an existing property: foo.bar() calls an anonymnous function\nspyOn(foo, 'bar').andCall(function() { return 'baz';} );</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fakeFunc</span> : Function<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/jasmine.Spy\" rel=\"jasmine.Spy\" class=\"docClass\">jasmine.Spy</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-andCallThrough' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jasmine.Spy'>jasmine.Spy</span><br/><a href='source/jasmine.html#jasmine-Spy-method-andCallThrough' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jasmine.Spy-method-andCallThrough' class='name expandable'>andCallThrough</a>( <span class='pre'></span> ) : <a href=\"#!/api/jasmine.Spy\" rel=\"jasmine.Spy\" class=\"docClass\">jasmine.Spy</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Tells a spy to call through to the actual implemenatation. ...</div><div class='long'><p>Tells a spy to call through to the actual implemenatation.</p>\n\n<p>@example\nvar foo = {\n  bar: function() { // do some stuff }\n}</p>\n\n<p>// defining a spy on an existing property: foo.bar\nspyOn(foo, 'bar').andCallThrough();</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/jasmine.Spy\" rel=\"jasmine.Spy\" class=\"docClass\">jasmine.Spy</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-andReturn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jasmine.Spy'>jasmine.Spy</span><br/><a href='source/jasmine.html#jasmine-Spy-method-andReturn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jasmine.Spy-method-andReturn' class='name expandable'>andReturn</a>( <span class='pre'>value</span> ) : <a href=\"#!/api/jasmine.Spy\" rel=\"jasmine.Spy\" class=\"docClass\">jasmine.Spy</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>For setting the return value of a spy. ...</div><div class='long'><p>For setting the return value of a spy.</p>\n\n<p>@example\n// defining a spy from scratch: foo() returns 'baz'\nvar foo = jasmine.createSpy('spy on foo').andReturn('baz');</p>\n\n<p>// defining a spy on an existing property: foo.bar() returns 'baz'\nspyOn(foo, 'bar').andReturn('baz');</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/jasmine.Spy\" rel=\"jasmine.Spy\" class=\"docClass\">jasmine.Spy</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-andThrow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jasmine.Spy'>jasmine.Spy</span><br/><a href='source/jasmine.html#jasmine-Spy-method-andThrow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jasmine.Spy-method-andThrow' class='name expandable'>andThrow</a>( <span class='pre'>exceptionMsg</span> ) : <a href=\"#!/api/jasmine.Spy\" rel=\"jasmine.Spy\" class=\"docClass\">jasmine.Spy</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>For throwing an exception when a spy is called. ...</div><div class='long'><p>For throwing an exception when a spy is called.</p>\n\n<p>@example\n// defining a spy from scratch: foo() throws an exception w/ message 'ouch'\nvar foo = jasmine.createSpy('spy on foo').andThrow('baz');</p>\n\n<p>// defining a spy on an existing property: foo.bar() throws an exception w/ message 'ouch'\nspyOn(foo, 'bar').andThrow('baz');</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>exceptionMsg</span> : String<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/jasmine.Spy\" rel=\"jasmine.Spy\" class=\"docClass\">jasmine.Spy</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-beforeEach' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jasmine.Spy'>jasmine.Spy</span><br/><a href='source/jasmine.html#jasmine-Spy-method-beforeEach' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jasmine.Spy-method-beforeEach' class='name expandable'>beforeEach</a>( <span class='pre'>beforeEachFunction</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>A function that is called before each spec in a suite. ...</div><div class='long'><p>A function that is called before each spec in a suite.</p>\n\n<p>Used for spec setup, including validating assumptions.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>beforeEachFunction</span> : Function<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-createSpyObj' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jasmine.Spy'>jasmine.Spy</span><br/><a href='source/jasmine.html#jasmine-Spy-method-createSpyObj' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jasmine.Spy-method-createSpyObj' class='name expandable'>createSpyObj</a>( <span class='pre'>baseName, methodNames</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a more complicated spy: an Object that has every property a function that is a spy. ...</div><div class='long'><p>Creates a more complicated spy: an Object that has every property a function that is a spy.  Used for stubbing something\nlarge in one call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>baseName</span> : String<div class='sub-desc'><p>name of spy class</p>\n</div></li><li><span class='pre'>methodNames</span> : Array<div class='sub-desc'><p>array of names of methods to make spies</p>\n</div></li></ul></div></div></div><div id='method-describe' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jasmine.Spy'>jasmine.Spy</span><br/><a href='source/jasmine.html#jasmine-Spy-method-describe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jasmine.Spy-method-describe' class='name expandable'>describe</a>( <span class='pre'>description, specDefinitions</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Defines a suite of specifications. ...</div><div class='long'><p>Defines a suite of specifications.</p>\n\n<p>Stores the description and all defined specs in the Jasmine environment as one suite of specs. Variables declared\nare accessible by calls to beforeEach, it, and afterEach. Describe blocks can be nested, allowing for specialization\nof setup in some tests.</p>\n\n<p>@example\n// TODO: a simple suite</p>\n\n<p>// TODO: a simple suite with a nested describe block</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>description</span> : String<div class='sub-desc'><p>A string, usually the class under test.</p>\n</div></li><li><span class='pre'>specDefinitions</span> : Function<div class='sub-desc'><p>function that defines several specs.</p>\n</div></li></ul></div></div></div><div id='method-expect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jasmine.Spy'>jasmine.Spy</span><br/><a href='source/jasmine.html#jasmine-Spy-method-expect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jasmine.Spy-method-expect' class='name expandable'>expect</a>( <span class='pre'>actual</span> ) : <a href=\"#!/api/jasmine.Matchers\" rel=\"jasmine.Matchers\" class=\"docClass\">jasmine.Matchers</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Starts a chain for a Jasmine expectation. ...</div><div class='long'><p>Starts a chain for a Jasmine expectation.</p>\n\n<p>It is passed an Object that is the actual value and should chain to one of the many\n<a href=\"#!/api/jasmine.Matchers\" rel=\"jasmine.Matchers\" class=\"docClass\">jasmine.Matchers</a> functions.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>actual</span> : Object<div class='sub-desc'><p>Actual value to test against and expected value</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/jasmine.Matchers\" rel=\"jasmine.Matchers\" class=\"docClass\">jasmine.Matchers</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-inherit' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jasmine.Spy'>jasmine.Spy</span><br/><a href='source/jasmine.html#jasmine-Spy-method-inherit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jasmine.Spy-method-inherit' class='name expandable'>inherit</a>( <span class='pre'>childClass, parentClass</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Declare that a child class inherit it's prototype from the parent class. ...</div><div class='long'><p>Declare that a child class inherit it's prototype from the parent class.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>childClass</span> : Function<div class='sub-desc'>\n</div></li><li><span class='pre'>parentClass</span> : Function<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isSpy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jasmine.Spy'>jasmine.Spy</span><br/><a href='source/jasmine.html#jasmine-Spy-method-isSpy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jasmine.Spy-method-isSpy' class='name expandable'>isSpy</a>( <span class='pre'>putativeSpy</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Determines whether an object is a spy. ...</div><div class='long'><p>Determines whether an object is a spy.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>putativeSpy</span> : <a href=\"#!/api/jasmine.Spy\" rel=\"jasmine.Spy\" class=\"docClass\">jasmine.Spy</a>|Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-it' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jasmine.Spy'>jasmine.Spy</span><br/><a href='source/jasmine.html#jasmine-Spy-method-it' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jasmine.Spy-method-it' class='name expandable'>it</a>( <span class='pre'>desc, func</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a Jasmine spec that will be added to the current suite. ...</div><div class='long'><p>Creates a Jasmine spec that will be added to the current suite.</p>\n\n<p>// TODO: pending tests</p>\n\n<p>@example\nit('should be true', function() {\n  expect(true).toEqual(true);\n});</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>description of this specification</p>\n</div></li><li><span class='pre'>func</span> : Function<div class='sub-desc'><p>defines the preconditions and expectations of the spec</p>\n</div></li></ul></div></div></div><div id='method-log' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jasmine.Spy'>jasmine.Spy</span><br/><a href='source/jasmine.html#jasmine-Spy-method-log' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jasmine.Spy-method-log' class='name expandable'>log</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>All parameters are pretty-printed and concatenated together, then written to the current spec's output. ...</div><div class='long'><p>All parameters are pretty-printed and concatenated together, then written to the current spec's output.</p>\n\n<p>Be careful not to leave calls to <code>jasmine.log</code> in production code.</p>\n</div></div></div><div id='method-plan' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jasmine.Spy'>jasmine.Spy</span><br/><a href='source/jasmine.html#jasmine-Spy-method-plan' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jasmine.Spy-method-plan' class='name expandable'>plan</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>The actual function this spy stubs. ...</div><div class='long'><p>The actual function this spy stubs.</p>\n</div></div></div><div id='method-reset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jasmine.Spy'>jasmine.Spy</span><br/><a href='source/jasmine.html#jasmine-Spy-method-reset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jasmine.Spy-method-reset' class='name expandable'>reset</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Resets all of a spy's the tracking variables so that it can be used again. ...</div><div class='long'><p>Resets all of a spy's the tracking variables so that it can be used again.</p>\n\n<p>@example\nspyOn(foo, 'bar');</p>\n\n<p>foo.bar();</p>\n\n<p>expect(foo.bar.callCount).toEqual(1);</p>\n\n<p>foo.bar.reset();</p>\n\n<p>expect(foo.bar.callCount).toEqual(0);</p>\n</div></div></div><div id='method-runs' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jasmine.Spy'>jasmine.Spy</span><br/><a href='source/jasmine.html#jasmine-Spy-method-runs' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jasmine.Spy-method-runs' class='name expandable'>runs</a>( <span class='pre'>func</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Defines part of a jasmine spec. ...</div><div class='long'><p>Defines part of a jasmine spec.  Used in cominbination with waits or waitsFor in asynchrnous specs.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>func</span> : Function<div class='sub-desc'><p>Function that defines part of a jasmine spec.</p>\n</div></li></ul></div></div></div><div id='method-spyOn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jasmine.Spy'>jasmine.Spy</span><br/><a href='source/jasmine.html#jasmine-Spy-method-spyOn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jasmine.Spy-method-spyOn' class='name expandable'>spyOn</a>( <span class='pre'>obj, methodName</span> ) : <a href=\"#!/api/jasmine.Spy\" rel=\"jasmine.Spy\" class=\"docClass\">jasmine.Spy</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Function that installs a spy on an existing object's method name. ...</div><div class='long'><p>Function that installs a spy on an existing object's method name.  Used within a Spec to create a spy.</p>\n\n<p>@example\n// spy example\nvar foo = {\n  not: function(bool) { return !bool; }\n}\nspyOn(foo, 'not'); // actual foo.not will not be called, execution stops</p>\n\n<p>@see jasmine.createSpy</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>methodName</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/jasmine.Spy\" rel=\"jasmine.Spy\" class=\"docClass\">jasmine.Spy</a></span><div class='sub-desc'><p>a Jasmine spy that can be chained with all spy methods</p>\n</div></li></ul></div></div></div><div id='method-subclass' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jasmine.Spy'>jasmine.Spy</span><br/><a href='source/jasmine.html#jasmine-Spy-method-subclass' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jasmine.Spy-method-subclass' class='name expandable'>subclass</a>( <span class='pre'></span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-waits' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jasmine.Spy'>jasmine.Spy</span><br/><a href='source/jasmine.html#jasmine-Spy-method-waits' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jasmine.Spy-method-waits' class='name expandable'>waits</a>( <span class='pre'>timeout</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Waits a fixed time period before moving to the next block. ...</div><div class='long'><p>Waits a fixed time period before moving to the next block.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprected</strong> </p>\n        <p>Use waitsFor() instead</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>timeout</span> : Number<div class='sub-desc'><p>milliseconds to wait</p>\n</div></li></ul></div></div></div><div id='method-waitsFor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jasmine.Spy'>jasmine.Spy</span><br/><a href='source/jasmine.html#jasmine-Spy-method-waitsFor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jasmine.Spy-method-waitsFor' class='name expandable'>waitsFor</a>( <span class='pre'>latchFunction, optional_timeoutMessage, optional_timeout</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Waits for the latchFunction to return true before proceeding to the next block. ...</div><div class='long'><p>Waits for the latchFunction to return true before proceeding to the next block.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>latchFunction</span> : Function<div class='sub-desc'>\n</div></li><li><span class='pre'>optional_timeoutMessage</span> : String<div class='sub-desc'>\n</div></li><li><span class='pre'>optional_timeout</span> : Number<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-xdescribe' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jasmine.Spy'>jasmine.Spy</span><br/><a href='source/jasmine.html#jasmine-Spy-method-xdescribe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jasmine.Spy-method-xdescribe' class='name expandable'>xdescribe</a>( <span class='pre'>description, specDefinitions</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Disables a suite of specifications. ...</div><div class='long'><p>Disables a suite of specifications.  Used to disable some suites in a file, or files, temporarily during development.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>description</span> : String<div class='sub-desc'><p>A string, usually the class under test.</p>\n</div></li><li><span class='pre'>specDefinitions</span> : Function<div class='sub-desc'><p>function that defines several specs.</p>\n</div></li></ul></div></div></div><div id='method-xit' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jasmine.Spy'>jasmine.Spy</span><br/><a href='source/jasmine.html#jasmine-Spy-method-xit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/jasmine.Spy-method-xit' class='name expandable'>xit</a>( <span class='pre'>desc, func</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a disabled Jasmine spec. ...</div><div class='long'><p>Creates a <em>disabled</em> Jasmine spec.</p>\n\n<p>A convenience method that allows existing specs to be disabled temporarily during development.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>desc</span> : String<div class='sub-desc'><p>description of this specification</p>\n</div></li><li><span class='pre'>func</span> : Function<div class='sub-desc'><p>defines the preconditions and expectations of the spec</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});