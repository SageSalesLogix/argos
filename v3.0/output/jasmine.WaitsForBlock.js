Ext.data.JsonP.jasmine_WaitsForBlock({"tagname":"class","name":"jasmine.WaitsForBlock","autodetected":{},"files":[{"filename":"jasmine.js","href":"jasmine.html#jasmine-WaitsForBlock"}],"members":[{"name":"constructor","tagname":"method","owner":"jasmine.WaitsForBlock","id":"method-constructor","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-jasmine.WaitsForBlock","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/jasmine.html#jasmine-WaitsForBlock' target='_blank'>jasmine.js</a></div></pre><div class='doc-contents'><p>A block which waits for some condition to become true, with timeout.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='jasmine.WaitsForBlock'>jasmine.WaitsForBlock</span><br/><a href='source/jasmine.html#jasmine-WaitsForBlock-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/jasmine.WaitsForBlock-method-constructor' class='name expandable'>jasmine.WaitsForBlock</a>( <span class='pre'>env, timeout, latchFunction, message, spec</span> ) : <a href=\"#!/api/jasmine.WaitsForBlock\" rel=\"jasmine.WaitsForBlock\" class=\"docClass\">jasmine.WaitsForBlock</a><span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>env</span> : <a href=\"#!/api/jasmine.Env\" rel=\"jasmine.Env\" class=\"docClass\">jasmine.Env</a><div class='sub-desc'><p>The Jasmine environment.</p>\n</div></li><li><span class='pre'>timeout</span> : Number<div class='sub-desc'><p>The maximum time in milliseconds to wait for the condition to become true.</p>\n</div></li><li><span class='pre'>latchFunction</span> : Function<div class='sub-desc'><p>A function which returns true when the desired condition has been met.</p>\n</div></li><li><span class='pre'>message</span> : String<div class='sub-desc'><p>The message to display if the desired condition hasn't been met within the given time period.</p>\n</div></li><li><span class='pre'>spec</span> : <a href=\"#!/api/jasmine.Spec\" rel=\"jasmine.Spec\" class=\"docClass\">jasmine.Spec</a><div class='sub-desc'><p>The Jasmine spec.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/jasmine.WaitsForBlock\" rel=\"jasmine.WaitsForBlock\" class=\"docClass\">jasmine.WaitsForBlock</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});